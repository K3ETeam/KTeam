titles <- factor(titles, labels = labels(table(titles))[[1]])
return(titles)
}
table(full$Fare)
length(is.na(Full$Fare))
length(is.na(full$Fare))
length(is.na(full$Fare) == TRUE)
length(is.na(full$Age))
length(is.na(full$Age) == TRUE)
nrow(full[is.na(full$Fare)),])
nrow(full[is.na(full$Fare),])
nrow(full[is.na(full$Age),])
nrow(full[is.na(full$Embarked),])
nrow(full[full$Embarked == "",])
rf_embarked <- randomForest(Embarked ~ Pclass + SibSp + Parch + Fare, data = full, method = "class")
rpart_tree_embark <- rpart(Embarked ~ Pclass + SibSp + Parch + Fare, data = full, method = "class")
predict_embark <- predict(rpart_tree_embark, newdata = full[full$Embarked == "",], type = "class")
full$Embarked[strtoi(labels(predict_embark))] <- predict_embark
nrow(full[full$Embarked == "",])
rg_age <- randomForest(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked, data = train, importance=TRUE, ntree = 1000)
aux <- full[!is.na(full$Age),]
aux
str(aux)
rg_age <- randomForest(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked, data = aux, importance=TRUE, ntree = 1000)
rg_age <- randomForest(Age ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, importance=TRUE, ntree = 1000)
print(rf_age)
print(rg_age)
aux <- full[!is.na(full$Fare),]
rf_fare <- randomForest(Age ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, importance=TRUE, ntree = 1000)
rf_fare <- randomForest(Fare ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, importance=TRUE, ntree = 1000)
prinf(rf_fare)
print(rf_fare)
importance(rf_age)
importance(rg_age)
importance(rf_fare)
aux <- full[is.na(full$Fare),]
aux
predict(rf_fare, aux)
rf_fare <- randomForest(Fare ~ Pclass + Sex + SibSp + Parch + Embarked + Ticket, data = aux, importance=TRUE, ntree = 1000)
rf_fare <- randomForest(Fare ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, importance=TRUE, ntree = 1000)
aux <- full[!is.na(full$Fare),]
rf_fare <- randomForest(Fare ~ Pclass + Sex + SibSp + Parch + Embarked + Ticket, data = aux, importance=TRUE, ntree = 1000)
full[full$Pclass == 3,]
full[full$Pclass == 3,]$Fare
aux <- full[!is.na(full$Fare),
]
rf_fare <- randomForest(Fare ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, importance=TRUE, ntree = 1000)
aux <- full[is.na(full$Fare),]
predict(rf_fare, aux)
predict(rf_fare, aux)[1]
predict(rf_fare, aux)[2]
full[predict(rf_fare, aux)]
full[predict(rf_fare, aux),]
full[label(predict(rf_fare, aux)),]
aux
predict(rf_fare, aux)[aux$PassengerId]
predict(rf_fare, aux)
prediction <- predict(rf_fare, aux)
predict
prediction
prediction[1044]
prediction["1044"]
label(prediction)
labels(prediction)
full[labels(predict(rf_fare, aux)),]
full[labels(prediction),]
full[labels(prediction),] <- prediction[labels(prediction)]
full
rm(list = ls())
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
library(ggplot2)
library(randomForest)
# Carga de datos
train_url <- "../data/train.csv"
train <- read.csv(train_url)
  
test_url <- "../data/test.csv"
test <- read.csv(test_url)
# Unimos los dos conjuntos para tratar los datos y despues los separaremos de nuevo
full <- rbind(train[,!(names(train) %in% c("Survived"))], test);
rpart_tree_embark <- rpart(Embarked ~ Pclass + SibSp + Parch + Fare, data = full, method = "class")
predict_embark <- predict(rpart_tree_embark, newdata = full[full$Embarked == "",], type = "class")
full$Embarked[strtoi(labels(predict_embark))] <- predict_embark
aux <- full[!is.na(full$Fare),]
rf_fare <- randomForest(Fare ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, importance=TRUE, ntree = 1000)
aux <- full[is.na(full$Fare),]
prediction <- predict(rf_fare, aux)
prediction
full$Fare[labels(prediction)]
full$Fare[labels(prediction)] <- prediction[labels(prediction)]
full$Fare[labels(prediction)]
predict[labels(prediction)]
prediction[labels(prediction)]
prediction[labels(prediction)][1]
prediction[labels(prediction)][[1]]
full$Fare[labels(prediction)] <- prediction[labels(prediction)][[1]]
full$Fare <- prediction
full$FAre
full$Fare
train <- read.csv(train_url)# Carga de datos
train_url <- "../data/train.csv"
train <- read.csv(train_url)
  
test_url <- "../data/test.csv"
test <- read.csv(test_url)
# Unimos los dos conjuntos para tratar los datos y despues los separaremos de nuevo
full <- rbind(train[,!(names(train) %in% c("Survived"))], test);
# Carga de datos
train_url <- "../data/train.csv"
train <- read.csv(train_url)
  
test_url <- "../data/test.csv"
test <- read.csv(test_url)
# Unimos los dos conjuntos para tratar los datos y despues los separaremos de nuevo
full <- rbind(train[,!(names(train) %in% c("Survived"))], test);
# Carga de datos
train_url <- "../data/train.csv"
train <- read.csv(train_url)
  
test_url <- "../data/test.csv"
test <- read.csv(test_url)
# Unimos los dos conjuntos para tratar los datos y despues los separaremos de nuevo
full <- rbind(train[,!(names(train) %in% c("Survived"))], test);
prediction
prediction[1]
prediction[[1]]
prediction[labels(prediction), [1]]
prediction[[labels(prediction)] [1]]
prediction[labels(prediction)] [1]
prediction[labels(prediction)] [[1]]
prediction[labels(prediction)][[1]]
str(prediction)
prediction[labels(prediction)][[2]]
prediction[labels(prediction)][[0]]
prediction[[1]]
full[labels(prediction),]
full[labels(prediction),]$Fare
full[labels(prediction),]$Fare <- prediction[[1]]
full[labels(prediction),]$Fare
aux <- full[!is.na(full$Age),]
rf_age <- randomForest(Age ~ Pclass + Sex + SibSp + Parch + Embarked + Fare, data = aux, importance=TRUE, ntree = 1000)
print(rf_age)
rf_age <- randomForest(Age ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, importance=TRUE, ntree = 1000)
print(rf_age)
aux <- full[is.na(full$Age),]
prediction <- predict(rf_age, aux)
predict
prediction
prediction[[1]]
prediction[]
prediction[[1]]
prediction[[]]
prediction[labels(prediction)]
full[labels(prediction),]$Age <- prediction
full$Age
full$Age <- round(full$Age)
full$Age
qplot(full$Age)
substr(full$Cabin,1,1)
cabin <- substr(full$Cabin,1,1)
cabin == ""
cabin[cabin == ""] <- "Unknown"
cabin
factor(cabin, labels = labels(table(cabin))[[1]])
ticket <- function(dataset){
ticket <- gsub(" \\d+|^\\d+$|[:/.:]", "", dataset$Ticket)
ticket[ticket == ""] <- "Empty"
ticket <- factor(full$TicketPrefix, labels = labels(table(ticket))[[1]])
return(ticket)
}
cabin <- function(dataset){
cabin <- substr(dataset$Cabin,1,1)
cabin[cabin == ""] <- "Unknown"
cabin <- factor(cabin, labels = labels(table(cabin))[[1]])
return(cabin)
}
titles <- function(dataset){
titles <- gsub('(.*, )|(\\..*)', '', dataset$Name)
titles[titles == 'Mlle'] <- 'Miss' 
titles[titles == 'Ms'] <- 'Miss'
titles[titles == 'Mme'] <- 'Mrs'
other <- c('Jonkheer', 'the Countess', 'Don', 'Dona', 'Capt', 'Col', 'Sir', 'Lady', 'Major')
titles[titles %in% other] <- 'Other' 
titles <- factor(titles, labels = labels(table(titles))[[1]])
return(titles)
}
full$Title <- titles(full)
full$CabinPrefix <- cabin(full)
full$TicketPrefix <- ticket(full)
ticket <- function(dataset){
ticket <- gsub(" \\d+|^\\d+$|[:/.:]", "", dataset$Ticket)
ticket[ticket == ""] <- "Empty"
ticket <- factor(ticket, labels = labels(table(ticket))[[1]])
return(ticket)
}
full$Title <- titles(full)
full$CabinPrefix <- cabin(full)
full$TicketPrefix <- ticket(full)
str(full)
train_aux <- full[train$PassengerId,]
test_aux <- full[test$PassengerId,]
full$FSize <- full$Parch + full$SibSp + 1
full$FSize <- full$Parch + full$SibSp + 1
train_aux <- full[train$PassengerId,]
test_aux <- full[test$PassengerId,]
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Ticket + Cabin + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000)
train_aux <- full[train$PassengerId,]
train_aux$Survived <- train$Survived
test_aux <- full[test$PassengerId,]
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Ticket + Cabin + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Cabin + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Cabin + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Ticket + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000, proximity = TRUE)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 500)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 2000)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 750)
andomForest(as.factor(Survived) ~ Pclass + Fare + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex +Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex +Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex +Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 4)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 4)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 4)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 2)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 2)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 2)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 5)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 5)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 5)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 5)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 750, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 100, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 2000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 2000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 12000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
rf_1 <- randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
print(rf_1)
rf_1 <- randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
rf_1 <- randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
print(rf_1)
rf_1 <- randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
print(rf_1)
prediction <- predict(rf_1, test_aux)
solution <- data.frame(PassengerID = test$PassengerId, Survived = prediction, check.names = FALSE)
write.csv(solution, file = 'solution.csv', row.names = F)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 2)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 2)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 2)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 4)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 4)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 4)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
full_p1 <- full[full$Pclass == 1,]
full_p2 <- full[full$Pclass == 2,]
full_p3 <- full[full$Pclass == 3,]
train_aux_p1 <- full[train$PassengerId & full$Pclass == 1,]
train_aux_p1$Survived <- train$Survived[full$Pclass == 1]
test_aux_p1 <- full[test$PassengerId & full$Pclass == 1,]
train_aux_p2 <- full[train$PassengerId & full$Pclass == 2,]
train_aux_p2$Survived <- train$Survived[full$Pclass == 2]
test_aux_p2 <- full[test$PassengerId & full$Pclass == 2,]
train_aux_p3 <- full[train$PassengerId & full$Pclass == 3,]
train_aux_p3$Survived <- train$Survived[full$Pclass == 3]
test_aux_p3 <- full[test$PassengerId & full$Pclass == 3,]
train_aux_p1 <- full[full$Pclass == 1 & train$PassengerId,]
full_p1 <- full[full$Pclass == 1,]
full_p2 <- full[full$Pclass == 2,]
full_p3 <- full[full$Pclass == 3,]
train_aux_p1 <- full_p1[train$PassengerId,]
train_aux_p1$Survived <- train[full_p1$PassengerId,]$Survived
train[full_p1$PassengerId,]$Survived
train[train_aux_p1PassengerId,]$Survived
train[train_aux_p1$PassengerId,]$Survived
train_aux_p1
full_p1
train_aux_p1 <- full[train[train$$Pclass == 1,]$PassengerId,]
train_aux_p1 <- full[train[train$Pclass == 1,]$PassengerId,]
nrow(train_aux_p1)
train_aux_p1$Survived <- train[train$$Pclass == 1,]$Survived
train_aux_p1$Survived <- train[train$Pclass == 1,]$Survived
test_aux_p1 <- full[test[test$Pclass == 1,]$PassengerId,]
train_aux_p1 <- full[train[train$Pclass == 1,]$PassengerId,]
train_aux_p1$Survived <- train[train$Pclass == 1,]$Survived
test_aux_p1 <- full[test[test$Pclass == 1,]$PassengerId,]
train_aux_p2 <- full[train[train$Pclass == 2,]$PassengerId,]
train_aux_p2$Survived <- train[train$Pclass == 2,]$Survived
test_aux_p2 <- full[test[test$Pclass == 2,]$PassengerId,]
train_aux_p3 <- full[train[train$Pclass == 3,]$PassengerId,]
train_aux_p3$Survived <- train[train$Pclass == 3,]$Survived
test_aux_p3 <- full[test[test$Pclass == 3,]$PassengerId,]
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux_p1, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux_p2, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux_p3, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux_p2, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ , data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Pclass + Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux_p2, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux_p2, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux_p2, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux_p2, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + Embarked + FSize, data = train_aux_p2, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux_p1, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux_p2, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux_p3, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Title + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux_p3, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Sex + Age + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux_p3, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Sex + Age + CabinPrefix + TicketPrefix + Embarked + FSize, data = train_aux_p3, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Sex + Age + CabinPrefix + TicketPrefix + Embarked + Parch + SibSp, data = train_aux_p3, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + Si, data = train_aux_p3, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux_p3, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + TicketPrefix + Embarked + FSize + Parch + SibSp, data = train_aux_p1, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Fare + Sex + Age + Title + CabinPrefix + TicketPrefix, data = train_aux_p1, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Sex + Age + Titleefix, data = train_aux_p1, importance=TRUE, ntree = 1000, mtry = 3)
str(train_aux_p1)
ggplot(train_aux_p1, aes(Title, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(Title, fill=factor(Survived))) + geom_bar(position="fill")
ggplot(train_aux_p1, aes(FSize, fill=factor(Survived))) + geom_bar(position="fill")
ggplot(train_aux_p1, aes(FSize, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(Parch, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(PibSp, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(SibSp, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1[train_aux_p1$Sex = "female",], aes(SibSp, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1[train_aux_p1$Sex == "female",], aes(SibSp, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(Sex, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(Title, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(Sex, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(CabinPrefix, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(Age, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(Fare, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(as.factor(Fare), fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(as.factor(Fare), fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p1, aes(as.factor(Fare), fill=factor(Survived))) + geom_bar(position="dodge")
randomForest(as.factor(Survived) ~ Sex + Age + CabinPrefix, data = train_aux_p1, importance=TRUE, ntree = 1000, mtry = 3)
randomForest(as.factor(Survived) ~ Sex + Age + CabinPrefix, data = train_aux_p1, importance=TRUE)
randomForest(as.factor(Survived) ~ Sex + Age + CabinPrefix, data = train_aux_p1, importance=TRUE)
randomForest(as.factor(Survived) ~ Sex + CabinPrefix, data = train_aux_p1, importance=TRUE)
randomForest(as.factor(Survived) ~ Sex, data = train_aux_p1, importance=TRUE)
randomForest(as.factor(Survived) ~ ., data = train_aux_p1, importance=TRUE)
train_aux_p1$Name
gsub(",.+","",train_aux_p1$Name)
length(gsub(",.+","",train_aux_p1$Name))
table(gsub(",.+","",train_aux_p1$Name))
table(train_aux_p1$CabinPrefix=
table(train_aux_p1$CabinPrefix)
length(train_aux_p1$CabinPrefix != "Unknown")
length(train_aux_p1$CabinPrefix == "Unknown")
nrow(train_aux_p1$CabinPrefix == "Unknown")
(train_aux_p1[train_aux_p1$CabinPrefix == "Unknown",])
nrow(train_aux_p1[train_aux_p1$CabinPrefix == "Unknown",])
nrow(train_aux_p1[train_aux_p1$CabinPrefix != "Unknown",])
train_aux_p1[train_aux_p1$CabinPrefix != "Unknown",]
aux <- train_aux_p1[train_aux_p1$CabinPrefix != "Unknown",]
rf_cabin <- randomForest(Cabin ~ Pclass + Sex + SibSp + Parch + Embarked, data = train_aux_p1, importance=TRUE, ntree = 1000)
rf_cabin <- randomForest(CabinPrefix ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, importance=TRUE, ntree = 1000)
str(aux)
rf_cabin <- randomForest(CabinPrefix ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, importance=TRUE, ntree = 1000)
rf_cabin <- randomForest(CabinPrefix ~ Pclass + Sex + SibSp + Parch, data = aux, importance=TRUE, ntree = 1000)
rf_cabin <- randomForest(CabinPrefix ~ Parch, data = aux, importance=TRUE, ntree = 1000)
aux$CabinPrefix
rf_cabin <- randomForest(CabinPrefix ~ Parch, data = aux, importance=TRUE, ntree = 1000)
rf_cabin <- randomForest(CabinPrefix ~ Embarked, data = aux, importance=TRUE, ntree = 1000)
rf_cabin <- randomForest(CabinPrefix~Parch, data = aux, importance=TRUE, ntree = 1000)
rf_cabin <- randomForest(CabinPrefix ~ Embarked, data = train, importance=TRUE, ntree = 1000)
rf_cabin <- randomForest(CabinPrefix ~ Embarked, data = full, importance=TRUE, ntree = 1000)
str(aux)
str(full)
rf_cabin <- randomForest(CabinPrefix ~ Pclass + Sex + SibSp + Parch + Embarked, data = full, importance=TRUE, ntree = 1000)
print(rf_cabin)
aux <- train_aux_p1[train_aux_p1$CabinPrefix != "Unknown",]
randomForest(CabinPrefix ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, importance=TRUE, ntree = 1000)
nrow(aux)
rpart_cabin <- rpart(CabinPrefix ~ Pclass + Sex + SibSp + Parch + Embarked, data = aux, method = "class")
rpart.plot(rpart_cabin)
aux <- train_aux_p1[train_aux_p1$CabinPrefix == "Unknown",]
predict(rpart_cabin, aux)
predict(rpart_cabin, newdata = aux, type = "class")
prediction <- predict(rpart_cabin, newdata = aux, type = "class")
prediction
aux
train_aux_p1[au
train_aux_p1[train_aux_p1$CabinPrefix == "Unknown",]
train_aux_p1[train_aux_p1$CabinPrefix == "Unknown",] <- prediction
train_aux_p1[train_aux_p1$CabinPrefix == "Unknown",]
train_aux_p1[train_aux_p1$CabinPrefix == "Unknown",]$CabinPrefix <- prediction
train_aux_p1[train_aux_p1$CabinPrefix == "Unknown",]
train_aux_p1 <- full[train[train$Pclass == 1,]$PassengerId,]
train_aux_p1$Survived <- train[train$Pclass == 1,]$Survived
test_aux_p1 <- full[test[test$Pclass == 1,]$PassengerId,]
train_aux_p2 <- full[train[train$Pclass == 2,]$PassengerId,]
train_aux_p2$Survived <- train[train$Pclass == 2,]$Survived
test_aux_p2 <- full[test[test$Pclass == 2,]$PassengerId,]
train_aux_p3 <- full[train[train$Pclass == 3,]$PassengerId,]
train_aux_p3$Survived <- train[train$Pclass == 3,]$Survived
test_aux_p3 <- full[test[test$Pclass == 3,]$PassengerId,]
ggplot(train_aux_p1, aes(CabinPrefix, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p3, aes(CabinPrefix, fill=factor(Survived))) + geom_bar(position="dodge")
str(train_aux_p3)
ggplot(train_aux_p3, aes(Title, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p3, aes(Sex, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p3, aes(Embarked, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p3, aes(Fare, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p3, aes(as.factor(Fare), fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p3, aes(Parch, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(, aes(SibSp, fill=factor(Survived))) + geom_bar(position="dodge")
ggplot(train_aux_p3, aes(Age, fill=factor(Survived))) + geom_bar(position="dodge")
randomForest(as.factor(Survived) ~ Sex + Embarked + Fare + Age, data = train_aux_p3, importance=TRUE)
randomForest(as.factor(Survived) ~ Sex, data = train_aux_p3, importance=TRUE)
randomForest(as.factor(Survived) ~ Sex + Embarked, data = train_aux_p3, importance=TRUE)
randomForest(as.factor(Survived) ~ Sex + Embarked + Fare, data = train_aux_p3, importance=TRUE)
randomForest(as.factor(Survived) ~ Sex + Embarked + Fare + Age, data = train_aux_p3, importance=TRUE)
randomForest(as.factor(Survived) ~ Sex + Embarked + Fare + Age + FSize, data = train_aux_p3, importance=TRUE)
q()
library(Hmisc)
rcorr(test_aux, type="spearman"
)
aov(Survived ~ Title, test_aux)
str(test_aux)
aov(Survived ~ Title, train_aux)
aov(CabinPrefix ~ Title, train_aux)
chisq.test(CabinPrefix ~ Title, train_aux)
chisq.test(train_aux$CabinPrefix, train_aux$Title)
aov(Survived ~ Title, train_aux)
aov(Survived ~ Cabin, train_aux)
aov(Survived ~ CabinPrefix, train_aux)
aov(Title ~ Fare, train_aux)
aov(Fare ~ Title, train_aux)
aov(Pclass ~ Title, train_aux)
q()
ls
ls()
rm(list = ls())
q
y
q()
